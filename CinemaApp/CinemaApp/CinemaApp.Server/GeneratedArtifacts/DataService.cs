//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Data Services
    
    /// <summary>
    /// Provides members to query and update data in the ApplicationData datasource.
    /// </summary>
    public sealed partial class ApplicationDataService
        : global::LightSwitchApplication.ApplicationData
    {
        #region Constructors
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ApplicationDataService() : base()
        {
        }
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Server Interceptions Points
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Beoordelings_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Beoordelings_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Beoordelings_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Beoordelings_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Beoordelings_Inserting(global::LightSwitchApplication.Beoordeling entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Beoordelings_Inserted(global::LightSwitchApplication.Beoordeling entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Beoordelings_Updating(global::LightSwitchApplication.Beoordeling entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Beoordelings_Updated(global::LightSwitchApplication.Beoordeling entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Beoordelings_Deleting(global::LightSwitchApplication.Beoordeling entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Beoordelings_Deleted(global::LightSwitchApplication.Beoordeling entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Beoordelings_Validate(global::LightSwitchApplication.Beoordeling entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Beoordelings_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Beoordeling, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BioscoopReviews_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BioscoopReviews_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BioscoopReviews_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BioscoopReviews_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BioscoopReviews_Inserting(global::LightSwitchApplication.BioscoopReview entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BioscoopReviews_Inserted(global::LightSwitchApplication.BioscoopReview entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BioscoopReviews_Updating(global::LightSwitchApplication.BioscoopReview entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BioscoopReviews_Updated(global::LightSwitchApplication.BioscoopReview entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BioscoopReviews_Deleting(global::LightSwitchApplication.BioscoopReview entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BioscoopReviews_Deleted(global::LightSwitchApplication.BioscoopReview entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BioscoopReviews_Validate(global::LightSwitchApplication.BioscoopReview entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BioscoopReviews_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.BioscoopReview, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executed();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executing(global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executed(global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_ExecuteFailed(global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ApplicationData_InitializingConnection(global::Microsoft.LightSwitch.DatabaseConnectionState state);
    
        #endregion
    
        #region Details Class
    
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        public static new class DetailsClass
        {
    
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1810:InitializeReferenceTypeStaticFieldsInline")]
            static DetailsClass()
            {
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Beoordeling>
                __BeoordelingsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Beoordeling>(
                    "Beoordelings",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Beoordelings_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Beoordelings_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Beoordelings_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Beoordelings_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Beoordelings_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Beoordelings_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Beoordelings_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Beoordelings_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Beoordelings_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Beoordelings_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Beoordelings_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Beoordelings_Filter);
            private static bool __Beoordelings_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Beoordelings_CanInsert(ref result);
                return result;
            }
            private static bool __Beoordelings_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Beoordelings_CanUpdate(ref result);
                return result;
            }
            private static bool __Beoordelings_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Beoordelings_CanDelete(ref result);
                return result;
            }
            private static bool __Beoordelings_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Beoordelings_CanRead(ref result);
                return result;
            }
            private static void __Beoordelings_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Beoordeling e)
            {
                d.Beoordelings_Inserting(e);
            }
            private static void __Beoordelings_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Beoordeling e)
            {
                d.Beoordelings_Inserted(e);
            }
            private static void __Beoordelings_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Beoordeling e)
            {
                d.Beoordelings_Updating(e);
            }
            private static void __Beoordelings_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Beoordeling e)
            {
                d.Beoordelings_Updated(e);
            }
            private static void __Beoordelings_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Beoordeling e)
            {
                d.Beoordelings_Deleting(e);
            }
            private static void __Beoordelings_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Beoordeling e)
            {
                d.Beoordelings_Deleted(e);
            }
            private static void __Beoordelings_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Beoordeling e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Beoordelings_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Beoordeling, bool>> __Beoordelings_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Beoordeling, bool>> filter = null;
                d.Beoordelings_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.BioscoopReview>
                __BioscoopReviewsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.BioscoopReview>(
                    "BioscoopReviews",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__BioscoopReviews_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__BioscoopReviews_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__BioscoopReviews_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__BioscoopReviews_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__BioscoopReviews_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__BioscoopReviews_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__BioscoopReviews_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__BioscoopReviews_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__BioscoopReviews_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__BioscoopReviews_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__BioscoopReviews_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__BioscoopReviews_Filter);
            private static bool __BioscoopReviews_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.BioscoopReviews_CanInsert(ref result);
                return result;
            }
            private static bool __BioscoopReviews_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.BioscoopReviews_CanUpdate(ref result);
                return result;
            }
            private static bool __BioscoopReviews_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.BioscoopReviews_CanDelete(ref result);
                return result;
            }
            private static bool __BioscoopReviews_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.BioscoopReviews_CanRead(ref result);
                return result;
            }
            private static void __BioscoopReviews_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.BioscoopReview e)
            {
                d.BioscoopReviews_Inserting(e);
            }
            private static void __BioscoopReviews_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.BioscoopReview e)
            {
                d.BioscoopReviews_Inserted(e);
            }
            private static void __BioscoopReviews_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.BioscoopReview e)
            {
                d.BioscoopReviews_Updating(e);
            }
            private static void __BioscoopReviews_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.BioscoopReview e)
            {
                d.BioscoopReviews_Updated(e);
            }
            private static void __BioscoopReviews_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.BioscoopReview e)
            {
                d.BioscoopReviews_Deleting(e);
            }
            private static void __BioscoopReviews_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.BioscoopReview e)
            {
                d.BioscoopReviews_Deleted(e);
            }
            private static void __BioscoopReviews_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.BioscoopReview e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.BioscoopReviews_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.BioscoopReview, bool>> __BioscoopReviews_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.BioscoopReview, bool>> filter = null;
                d.BioscoopReviews_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.ApplicationDataService>
                __SaveChangesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.ApplicationDataService>(
                    "SaveChanges",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Failed);
            private static bool __SaveChanges_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.SaveChanges_CanExecute(ref r);
                return r;
            }
            private static void __SaveChanges_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SaveChanges_Executing();
            }
            private static void __SaveChanges_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SaveChanges_Executed();
            }
            private static void __SaveChanges_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.SaveChanges_ExecuteFailed(ex);
            }
    
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.ApplicationDataService>
                ___QueryEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.ApplicationDataService>(
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query_Failed);
            private static void __Query_Executing(global::LightSwitchApplication.ApplicationDataService d, global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor)
            {
                d.Query_Executing(queryDescriptor);
            }
            private static void __Query_Executed(global::LightSwitchApplication.ApplicationDataService d, global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor)
            {
                d.Query_Executed(queryDescriptor);
            }
            private static void __Query_Failed(global::LightSwitchApplication.ApplicationDataService d, global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor)
            {
                d.Query_ExecuteFailed(queryDescriptor);
            }
    
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.DatabaseAuthEntry<global::LightSwitchApplication.ApplicationDataService>
                ___DatabaseAuthEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.DatabaseAuthEntry<global::LightSwitchApplication.ApplicationDataService>(
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ApplicationData_InitializingConnection);
            private static void __ApplicationData_InitializingConnection(global::LightSwitchApplication.ApplicationDataService d, global::Microsoft.LightSwitch.DatabaseConnectionState state)
            {
                d.ApplicationData_InitializingConnection(state);
            }
        }
    
        #endregion
    }
    
    /// <summary>
    /// Provides members to query and update data in the CinemaData datasource.
    /// </summary>
    public sealed partial class CinemaDataService
        : global::LightSwitchApplication.CinemaData
    {
        #region Constructors
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public CinemaDataService() : base()
        {
        }
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Server Interceptions Points
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Bioscoops_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Bioscoops_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Bioscoops_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Bioscoops_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Bioscoops_Inserting(global::LightSwitchApplication.Bioscoop entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Bioscoops_Inserted(global::LightSwitchApplication.Bioscoop entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Bioscoops_Updating(global::LightSwitchApplication.Bioscoop entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Bioscoops_Updated(global::LightSwitchApplication.Bioscoop entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Bioscoops_Deleting(global::LightSwitchApplication.Bioscoop entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Bioscoops_Deleted(global::LightSwitchApplication.Bioscoop entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Bioscoops_Validate(global::LightSwitchApplication.Bioscoop entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Bioscoops_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Bioscoop, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Films_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Films_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Films_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Films_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Films_Inserting(global::LightSwitchApplication.Film entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Films_Inserted(global::LightSwitchApplication.Film entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Films_Updating(global::LightSwitchApplication.Film entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Films_Updated(global::LightSwitchApplication.Film entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Films_Deleting(global::LightSwitchApplication.Film entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Films_Deleted(global::LightSwitchApplication.Film entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Films_Validate(global::LightSwitchApplication.Film entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Films_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Film, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Voorstellings_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Voorstellings_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Voorstellings_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Voorstellings_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Voorstellings_Inserting(global::LightSwitchApplication.Voorstelling entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Voorstellings_Inserted(global::LightSwitchApplication.Voorstelling entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Voorstellings_Updating(global::LightSwitchApplication.Voorstelling entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Voorstellings_Updated(global::LightSwitchApplication.Voorstelling entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Voorstellings_Deleting(global::LightSwitchApplication.Voorstelling entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Voorstellings_Deleted(global::LightSwitchApplication.Voorstelling entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Voorstellings_Validate(global::LightSwitchApplication.Voorstelling entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Voorstellings_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Voorstelling, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Zaals_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Zaals_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Zaals_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Zaals_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Zaals_Inserting(global::LightSwitchApplication.Zaal entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Zaals_Inserted(global::LightSwitchApplication.Zaal entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Zaals_Updating(global::LightSwitchApplication.Zaal entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Zaals_Updated(global::LightSwitchApplication.Zaal entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Zaals_Deleting(global::LightSwitchApplication.Zaal entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Zaals_Deleted(global::LightSwitchApplication.Zaal entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Zaals_Validate(global::LightSwitchApplication.Zaal entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Zaals_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Zaal, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executed();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executing(global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executed(global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_ExecuteFailed(global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CinemaData_InitializingConnection(global::Microsoft.LightSwitch.DatabaseConnectionState state);
    
        #endregion
    
        #region Details Class
    
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        public static new class DetailsClass
        {
    
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1810:InitializeReferenceTypeStaticFieldsInline")]
            static DetailsClass()
            {
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.CinemaDataService, global::LightSwitchApplication.Bioscoop>
                __BioscoopsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.CinemaDataService, global::LightSwitchApplication.Bioscoop>(
                    "Bioscoops",
                    global::LightSwitchApplication.CinemaDataService.DetailsClass.__Bioscoops_CanInsert,
                    global::LightSwitchApplication.CinemaDataService.DetailsClass.__Bioscoops_CanUpdate,
                    global::LightSwitchApplication.CinemaDataService.DetailsClass.__Bioscoops_CanDelete,
                    global::LightSwitchApplication.CinemaDataService.DetailsClass.__Bioscoops_CanRead,
                    global::LightSwitchApplication.CinemaDataService.DetailsClass.__Bioscoops_Inserting,
                    global::LightSwitchApplication.CinemaDataService.DetailsClass.__Bioscoops_Inserted,
                    global::LightSwitchApplication.CinemaDataService.DetailsClass.__Bioscoops_Updating,
                    global::LightSwitchApplication.CinemaDataService.DetailsClass.__Bioscoops_Updated,
                    global::LightSwitchApplication.CinemaDataService.DetailsClass.__Bioscoops_Deleting,
                    global::LightSwitchApplication.CinemaDataService.DetailsClass.__Bioscoops_Deleted,
                    global::LightSwitchApplication.CinemaDataService.DetailsClass.__Bioscoops_Validate,
                    global::LightSwitchApplication.CinemaDataService.DetailsClass.__Bioscoops_Filter);
            private static bool __Bioscoops_CanInsert(global::LightSwitchApplication.CinemaDataService d)
            {
                bool result = true;
                d.Bioscoops_CanInsert(ref result);
                return result;
            }
            private static bool __Bioscoops_CanUpdate(global::LightSwitchApplication.CinemaDataService d)
            {
                bool result = true;
                d.Bioscoops_CanUpdate(ref result);
                return result;
            }
            private static bool __Bioscoops_CanDelete(global::LightSwitchApplication.CinemaDataService d)
            {
                bool result = true;
                d.Bioscoops_CanDelete(ref result);
                return result;
            }
            private static bool __Bioscoops_CanRead(global::LightSwitchApplication.CinemaDataService d)
            {
                bool result = true;
                d.Bioscoops_CanRead(ref result);
                return result;
            }
            private static void __Bioscoops_Inserting(global::LightSwitchApplication.CinemaDataService d, global::LightSwitchApplication.Bioscoop e)
            {
                d.Bioscoops_Inserting(e);
            }
            private static void __Bioscoops_Inserted(global::LightSwitchApplication.CinemaDataService d, global::LightSwitchApplication.Bioscoop e)
            {
                d.Bioscoops_Inserted(e);
            }
            private static void __Bioscoops_Updating(global::LightSwitchApplication.CinemaDataService d, global::LightSwitchApplication.Bioscoop e)
            {
                d.Bioscoops_Updating(e);
            }
            private static void __Bioscoops_Updated(global::LightSwitchApplication.CinemaDataService d, global::LightSwitchApplication.Bioscoop e)
            {
                d.Bioscoops_Updated(e);
            }
            private static void __Bioscoops_Deleting(global::LightSwitchApplication.CinemaDataService d, global::LightSwitchApplication.Bioscoop e)
            {
                d.Bioscoops_Deleting(e);
            }
            private static void __Bioscoops_Deleted(global::LightSwitchApplication.CinemaDataService d, global::LightSwitchApplication.Bioscoop e)
            {
                d.Bioscoops_Deleted(e);
            }
            private static void __Bioscoops_Validate(global::LightSwitchApplication.CinemaDataService d, global::LightSwitchApplication.Bioscoop e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Bioscoops_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Bioscoop, bool>> __Bioscoops_Filter(global::LightSwitchApplication.CinemaDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Bioscoop, bool>> filter = null;
                d.Bioscoops_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.CinemaDataService, global::LightSwitchApplication.Film>
                __FilmsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.CinemaDataService, global::LightSwitchApplication.Film>(
                    "Films",
                    global::LightSwitchApplication.CinemaDataService.DetailsClass.__Films_CanInsert,
                    global::LightSwitchApplication.CinemaDataService.DetailsClass.__Films_CanUpdate,
                    global::LightSwitchApplication.CinemaDataService.DetailsClass.__Films_CanDelete,
                    global::LightSwitchApplication.CinemaDataService.DetailsClass.__Films_CanRead,
                    global::LightSwitchApplication.CinemaDataService.DetailsClass.__Films_Inserting,
                    global::LightSwitchApplication.CinemaDataService.DetailsClass.__Films_Inserted,
                    global::LightSwitchApplication.CinemaDataService.DetailsClass.__Films_Updating,
                    global::LightSwitchApplication.CinemaDataService.DetailsClass.__Films_Updated,
                    global::LightSwitchApplication.CinemaDataService.DetailsClass.__Films_Deleting,
                    global::LightSwitchApplication.CinemaDataService.DetailsClass.__Films_Deleted,
                    global::LightSwitchApplication.CinemaDataService.DetailsClass.__Films_Validate,
                    global::LightSwitchApplication.CinemaDataService.DetailsClass.__Films_Filter);
            private static bool __Films_CanInsert(global::LightSwitchApplication.CinemaDataService d)
            {
                bool result = true;
                d.Films_CanInsert(ref result);
                return result;
            }
            private static bool __Films_CanUpdate(global::LightSwitchApplication.CinemaDataService d)
            {
                bool result = true;
                d.Films_CanUpdate(ref result);
                return result;
            }
            private static bool __Films_CanDelete(global::LightSwitchApplication.CinemaDataService d)
            {
                bool result = true;
                d.Films_CanDelete(ref result);
                return result;
            }
            private static bool __Films_CanRead(global::LightSwitchApplication.CinemaDataService d)
            {
                bool result = true;
                d.Films_CanRead(ref result);
                return result;
            }
            private static void __Films_Inserting(global::LightSwitchApplication.CinemaDataService d, global::LightSwitchApplication.Film e)
            {
                d.Films_Inserting(e);
            }
            private static void __Films_Inserted(global::LightSwitchApplication.CinemaDataService d, global::LightSwitchApplication.Film e)
            {
                d.Films_Inserted(e);
            }
            private static void __Films_Updating(global::LightSwitchApplication.CinemaDataService d, global::LightSwitchApplication.Film e)
            {
                d.Films_Updating(e);
            }
            private static void __Films_Updated(global::LightSwitchApplication.CinemaDataService d, global::LightSwitchApplication.Film e)
            {
                d.Films_Updated(e);
            }
            private static void __Films_Deleting(global::LightSwitchApplication.CinemaDataService d, global::LightSwitchApplication.Film e)
            {
                d.Films_Deleting(e);
            }
            private static void __Films_Deleted(global::LightSwitchApplication.CinemaDataService d, global::LightSwitchApplication.Film e)
            {
                d.Films_Deleted(e);
            }
            private static void __Films_Validate(global::LightSwitchApplication.CinemaDataService d, global::LightSwitchApplication.Film e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Films_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Film, bool>> __Films_Filter(global::LightSwitchApplication.CinemaDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Film, bool>> filter = null;
                d.Films_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.CinemaDataService, global::LightSwitchApplication.Voorstelling>
                __VoorstellingsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.CinemaDataService, global::LightSwitchApplication.Voorstelling>(
                    "Voorstellings",
                    global::LightSwitchApplication.CinemaDataService.DetailsClass.__Voorstellings_CanInsert,
                    global::LightSwitchApplication.CinemaDataService.DetailsClass.__Voorstellings_CanUpdate,
                    global::LightSwitchApplication.CinemaDataService.DetailsClass.__Voorstellings_CanDelete,
                    global::LightSwitchApplication.CinemaDataService.DetailsClass.__Voorstellings_CanRead,
                    global::LightSwitchApplication.CinemaDataService.DetailsClass.__Voorstellings_Inserting,
                    global::LightSwitchApplication.CinemaDataService.DetailsClass.__Voorstellings_Inserted,
                    global::LightSwitchApplication.CinemaDataService.DetailsClass.__Voorstellings_Updating,
                    global::LightSwitchApplication.CinemaDataService.DetailsClass.__Voorstellings_Updated,
                    global::LightSwitchApplication.CinemaDataService.DetailsClass.__Voorstellings_Deleting,
                    global::LightSwitchApplication.CinemaDataService.DetailsClass.__Voorstellings_Deleted,
                    global::LightSwitchApplication.CinemaDataService.DetailsClass.__Voorstellings_Validate,
                    global::LightSwitchApplication.CinemaDataService.DetailsClass.__Voorstellings_Filter);
            private static bool __Voorstellings_CanInsert(global::LightSwitchApplication.CinemaDataService d)
            {
                bool result = true;
                d.Voorstellings_CanInsert(ref result);
                return result;
            }
            private static bool __Voorstellings_CanUpdate(global::LightSwitchApplication.CinemaDataService d)
            {
                bool result = true;
                d.Voorstellings_CanUpdate(ref result);
                return result;
            }
            private static bool __Voorstellings_CanDelete(global::LightSwitchApplication.CinemaDataService d)
            {
                bool result = true;
                d.Voorstellings_CanDelete(ref result);
                return result;
            }
            private static bool __Voorstellings_CanRead(global::LightSwitchApplication.CinemaDataService d)
            {
                bool result = true;
                d.Voorstellings_CanRead(ref result);
                return result;
            }
            private static void __Voorstellings_Inserting(global::LightSwitchApplication.CinemaDataService d, global::LightSwitchApplication.Voorstelling e)
            {
                d.Voorstellings_Inserting(e);
            }
            private static void __Voorstellings_Inserted(global::LightSwitchApplication.CinemaDataService d, global::LightSwitchApplication.Voorstelling e)
            {
                d.Voorstellings_Inserted(e);
            }
            private static void __Voorstellings_Updating(global::LightSwitchApplication.CinemaDataService d, global::LightSwitchApplication.Voorstelling e)
            {
                d.Voorstellings_Updating(e);
            }
            private static void __Voorstellings_Updated(global::LightSwitchApplication.CinemaDataService d, global::LightSwitchApplication.Voorstelling e)
            {
                d.Voorstellings_Updated(e);
            }
            private static void __Voorstellings_Deleting(global::LightSwitchApplication.CinemaDataService d, global::LightSwitchApplication.Voorstelling e)
            {
                d.Voorstellings_Deleting(e);
            }
            private static void __Voorstellings_Deleted(global::LightSwitchApplication.CinemaDataService d, global::LightSwitchApplication.Voorstelling e)
            {
                d.Voorstellings_Deleted(e);
            }
            private static void __Voorstellings_Validate(global::LightSwitchApplication.CinemaDataService d, global::LightSwitchApplication.Voorstelling e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Voorstellings_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Voorstelling, bool>> __Voorstellings_Filter(global::LightSwitchApplication.CinemaDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Voorstelling, bool>> filter = null;
                d.Voorstellings_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.CinemaDataService, global::LightSwitchApplication.Zaal>
                __ZaalsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.CinemaDataService, global::LightSwitchApplication.Zaal>(
                    "Zaals",
                    global::LightSwitchApplication.CinemaDataService.DetailsClass.__Zaals_CanInsert,
                    global::LightSwitchApplication.CinemaDataService.DetailsClass.__Zaals_CanUpdate,
                    global::LightSwitchApplication.CinemaDataService.DetailsClass.__Zaals_CanDelete,
                    global::LightSwitchApplication.CinemaDataService.DetailsClass.__Zaals_CanRead,
                    global::LightSwitchApplication.CinemaDataService.DetailsClass.__Zaals_Inserting,
                    global::LightSwitchApplication.CinemaDataService.DetailsClass.__Zaals_Inserted,
                    global::LightSwitchApplication.CinemaDataService.DetailsClass.__Zaals_Updating,
                    global::LightSwitchApplication.CinemaDataService.DetailsClass.__Zaals_Updated,
                    global::LightSwitchApplication.CinemaDataService.DetailsClass.__Zaals_Deleting,
                    global::LightSwitchApplication.CinemaDataService.DetailsClass.__Zaals_Deleted,
                    global::LightSwitchApplication.CinemaDataService.DetailsClass.__Zaals_Validate,
                    global::LightSwitchApplication.CinemaDataService.DetailsClass.__Zaals_Filter);
            private static bool __Zaals_CanInsert(global::LightSwitchApplication.CinemaDataService d)
            {
                bool result = true;
                d.Zaals_CanInsert(ref result);
                return result;
            }
            private static bool __Zaals_CanUpdate(global::LightSwitchApplication.CinemaDataService d)
            {
                bool result = true;
                d.Zaals_CanUpdate(ref result);
                return result;
            }
            private static bool __Zaals_CanDelete(global::LightSwitchApplication.CinemaDataService d)
            {
                bool result = true;
                d.Zaals_CanDelete(ref result);
                return result;
            }
            private static bool __Zaals_CanRead(global::LightSwitchApplication.CinemaDataService d)
            {
                bool result = true;
                d.Zaals_CanRead(ref result);
                return result;
            }
            private static void __Zaals_Inserting(global::LightSwitchApplication.CinemaDataService d, global::LightSwitchApplication.Zaal e)
            {
                d.Zaals_Inserting(e);
            }
            private static void __Zaals_Inserted(global::LightSwitchApplication.CinemaDataService d, global::LightSwitchApplication.Zaal e)
            {
                d.Zaals_Inserted(e);
            }
            private static void __Zaals_Updating(global::LightSwitchApplication.CinemaDataService d, global::LightSwitchApplication.Zaal e)
            {
                d.Zaals_Updating(e);
            }
            private static void __Zaals_Updated(global::LightSwitchApplication.CinemaDataService d, global::LightSwitchApplication.Zaal e)
            {
                d.Zaals_Updated(e);
            }
            private static void __Zaals_Deleting(global::LightSwitchApplication.CinemaDataService d, global::LightSwitchApplication.Zaal e)
            {
                d.Zaals_Deleting(e);
            }
            private static void __Zaals_Deleted(global::LightSwitchApplication.CinemaDataService d, global::LightSwitchApplication.Zaal e)
            {
                d.Zaals_Deleted(e);
            }
            private static void __Zaals_Validate(global::LightSwitchApplication.CinemaDataService d, global::LightSwitchApplication.Zaal e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Zaals_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Zaal, bool>> __Zaals_Filter(global::LightSwitchApplication.CinemaDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Zaal, bool>> filter = null;
                d.Zaals_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.CinemaDataService>
                __SaveChangesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.CinemaDataService>(
                    "SaveChanges",
                    global::LightSwitchApplication.CinemaDataService.DetailsClass.__SaveChanges_CanExecute,
                    global::LightSwitchApplication.CinemaDataService.DetailsClass.__SaveChanges_Executing,
                    global::LightSwitchApplication.CinemaDataService.DetailsClass.__SaveChanges_Executed,
                    global::LightSwitchApplication.CinemaDataService.DetailsClass.__SaveChanges_Failed);
            private static bool __SaveChanges_CanExecute(global::LightSwitchApplication.CinemaDataService d, bool r)
            {
                d.SaveChanges_CanExecute(ref r);
                return r;
            }
            private static void __SaveChanges_Executing(global::LightSwitchApplication.CinemaDataService d, object[] args)
            {
                d.SaveChanges_Executing();
            }
            private static void __SaveChanges_Executed(global::LightSwitchApplication.CinemaDataService d, object[] args)
            {
                d.SaveChanges_Executed();
            }
            private static void __SaveChanges_Failed(global::LightSwitchApplication.CinemaDataService d, object[] args, global::System.Exception ex)
            {
                d.SaveChanges_ExecuteFailed(ex);
            }
    
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.CinemaDataService>
                ___QueryEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.CinemaDataService>(
                    global::LightSwitchApplication.CinemaDataService.DetailsClass.__Query_Executing,
                    global::LightSwitchApplication.CinemaDataService.DetailsClass.__Query_Executed,
                    global::LightSwitchApplication.CinemaDataService.DetailsClass.__Query_Failed);
            private static void __Query_Executing(global::LightSwitchApplication.CinemaDataService d, global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor)
            {
                d.Query_Executing(queryDescriptor);
            }
            private static void __Query_Executed(global::LightSwitchApplication.CinemaDataService d, global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor)
            {
                d.Query_Executed(queryDescriptor);
            }
            private static void __Query_Failed(global::LightSwitchApplication.CinemaDataService d, global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor)
            {
                d.Query_ExecuteFailed(queryDescriptor);
            }
    
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.DatabaseAuthEntry<global::LightSwitchApplication.CinemaDataService>
                ___DatabaseAuthEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.DatabaseAuthEntry<global::LightSwitchApplication.CinemaDataService>(
                    global::LightSwitchApplication.CinemaDataService.DetailsClass.__CinemaData_InitializingConnection);
            private static void __CinemaData_InitializingConnection(global::LightSwitchApplication.CinemaDataService d, global::Microsoft.LightSwitch.DatabaseConnectionState state)
            {
                d.CinemaData_InitializingConnection(state);
            }
        }
    
        #endregion
    }
    
    #endregion
}
